<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Splash Screen</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        .fade-in {
            animation: fadeIn 1s ease-in-out;
        }
        
        .pulse-logo {
            animation: pulseLogo 2s ease-in-out infinite;
        }
        
        @keyframes fadeIn {
            from {
                opacity: 0;
                transform: scale(0.8);
            }
            to {
                opacity: 1;
                transform: scale(1);
            }
        }
        
        @keyframes pulseLogo {
            0%, 100% {
                transform: scale(1);
            }
            50% {
                transform: scale(1.05);
            }
        }
    </style>
</head>
<body class="bg-white min-h-screen">
    <!-- Custom Modal for navigation simulation -->
    <div id="modal" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 hidden">
        <div class="bg-white p-6 rounded-3xl shadow-lg max-w-sm w-full mx-4">
            <p id="modal-message" class="text-gray-700 mb-4 text-center"></p>
            <div class="flex justify-center">
                <button id="modal-close" class="px-6 py-2 bg-blue-500 text-white hover:bg-blue-600 rounded-full transition duration-200">Continue</button>
            </div>
        </div>
    </div>

    <!-- Splash Screen Content -->
    <div class="min-h-screen bg-white flex items-center justify-center">
        <div class="text-center">
            <!-- Logo -->
            <div class="fade-in">
                <img 
                    src="https://pfst.cf2.poecdn.net/base/image/9a83454921377de2340ada1aa779b76e53091705f05837fa1104ac78525a8a32?w=122&h=101" 
                    alt="Logo" 
                    class="w-32 h-26 mx-auto object-contain pulse-logo"
                    id="logo"
                >
            </div>
            
            <!-- Loading indicator (optional) -->
            <div class="mt-8 flex justify-center">
                <div class="animate-spin rounded-full h-6 w-6 border-b-2 border-blue-600"></div>
            </div>
        </div>
    </div>

    <script>
        let splashTimer;
        
        function showModal(message) {
            document.getElementById('modal-message').textContent = message;
            document.getElementById('modal').classList.remove('hidden');
        }

        document.getElementById('modal-close').addEventListener('click', function() {
            document.getElementById('modal').classList.add('hidden');
            // Simulate navigation to next screen
            simulateNavigation();
        });

        function simulateNavigation() {
            // In a real app, this would navigate to the appropriate screen
            // For demo purposes, we'll show different messages based on user state
            
            // Simulate checking user state
            const isFirstTimeUser = localStorage.getItem('isFirstTimeUser') !== 'false';
            const hasUserData = localStorage.getItem('hasUserData') === 'true';
            
            if (isFirstTimeUser) {
                showModal('Navigating to Get Started Screen...');
            } else if (hasUserData) {
                showModal('Navigating to Dashboard...');
            } else {
                showModal('Navigating to Login Options...');
            }
        }

        function startSplashTimer() {
            // Simulate the 3-second delay from the Flutter code
            splashTimer = setTimeout(() => {
                showModal('Splash screen complete! Checking user status...');
            }, 3000);
        }

        // Simulate biometric check and other initialization
        function initializeApp() {
            console.log('SPLASH SCREEN NAVIGATION STARTED');
            
            // Simulate connection check
            const isConnected = true; // Simulate internet connection
            
            if (isConnected) {
                console.log('CONNECTED TO THE INTERNET');
                
                // Simulate checking if user is first time
                const isFirstTimeUser = localStorage.getItem('showOnBoarding') !== 'false';
                
                if (isFirstTimeUser) {
                    // First time user flow
                    localStorage.setItem('nextScreen', 'GetStartedScreen');
                } else {
                    // Returning user flow
                    const hasValidSession = localStorage.getItem('hasUserData') === 'true';
                    
                    if (hasValidSession) {
                        // Has valid session
                        localStorage.setItem('nextScreen', 'Dashboard');
                    } else {
                        // No valid session
                        localStorage.setItem('nextScreen', 'LoginOptionScreen');
                    }
                }
            } else {
                console.log('NOT CONNECTED TO THE INTERNET');
                // Handle offline state
                localStorage.setItem('nextScreen', 'LoginOptionScreen');
            }
        }

        // Start the app when page loads
        window.addEventListener('load', function() {
            initializeApp();
            startSplashTimer();
        });

        // Clean up timer if page is closed
        window.addEventListener('beforeunload', function() {
            if (splashTimer) {
                clearTimeout(splashTimer);
            }
        });

        // For demo purposes - set some default values
        function setDemoData() {
            // Uncomment these to test different user states:
            
            // First time user:
            // localStorage.setItem('showOnBoarding', 'true');
            // localStorage.setItem('isFirstTimeUser', 'true');
            
            // Returning user with session:
            // localStorage.setItem('showOnBoarding', 'false');
            // localStorage.setItem('hasUserData', 'true');
            // localStorage.setItem('isFirstTimeUser', 'false');
            
            // Returning user without session:
            localStorage.setItem('showOnBoarding', 'false');
            localStorage.setItem('hasUserData', 'false');
            localStorage.setItem('isFirstTimeUser', 'false');
        }

        // Initialize demo data
        setDemoData();
    </script>
</body>
</html>
