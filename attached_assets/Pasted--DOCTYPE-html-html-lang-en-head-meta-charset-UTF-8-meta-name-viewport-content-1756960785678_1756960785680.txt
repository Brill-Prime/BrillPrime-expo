<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Set New Password</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@300;500;700;800&display=swap" rel="stylesheet">
    <style>
        .primary-blue { color: rgb(11, 26, 81); }
        .secondary-blue { color: rgb(70, 130, 180); }
        .neutral-grey { color: rgb(182, 182, 182); }
        .primary-text { color: rgb(19, 19, 19); }
        .bg-secondary { background-color: rgb(70, 130, 180); }
        
        .curved-input {
            border-radius: 30px;
            border: 1px solid rgb(70, 130, 180);
        }
        
        .curved-button {
            border-radius: 30px;
        }
        
        .montserrat {
            font-family: 'Montserrat', sans-serif;
        }
    </style>
</head>
<body class="bg-gray-50 min-h-screen">
    <!-- Custom Modal -->
    <div id="modal" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 hidden">
        <div class="bg-white p-6 rounded-3xl shadow-lg max-w-sm w-full mx-4">
            <p id="modal-message" class="text-gray-700 mb-4 text-center montserrat"></p>
            <div class="flex justify-center">
                <button id="modal-close" class="px-6 py-2 bg-blue-500 text-white hover:bg-blue-600 rounded-full transition duration-200 montserrat">OK</button>
            </div>
        </div>
    </div>

    <div class="min-h-screen bg-white">
        <div class="px-6 py-8 max-w-md mx-auto">
            <!-- Back Button -->
            <div class="mb-8">
                <button onclick="goBack()" class="w-6 h-6 bg-gray-300 hover:bg-gray-400 transition duration-200">
                    <svg class="w-4 h-4 m-1" fill="currentColor" viewBox="0 0 20 20">
                        <path fill-rule="evenodd" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clip-rule="evenodd"></path>
                    </svg>
                </button>
            </div>

            <!-- Title -->
            <div class="text-center mb-12">
                <h1 class="primary-blue text-xl font-extrabold montserrat">Set New Password</h1>
            </div>

            <!-- Password Field -->
            <div class="mb-6">
                <div class="relative">
                    <div class="absolute inset-y-0 left-0 pl-5 flex items-center pointer-events-none">
                        <svg class="w-5 h-5 neutral-grey" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z" clip-rule="evenodd"></path>
                        </svg>
                    </div>
                    <input 
                        type="password" 
                        id="password"
                        class="w-full pl-12 pr-14 py-4 curved-input focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-base montserrat neutral-grey placeholder-gray-400"
                        placeholder="Password"
                    >
                    <button type="button" onclick="togglePassword('password', 'eye-icon-1')" class="absolute inset-y-0 right-0 pr-5 flex items-center">
                        <svg id="eye-icon-1" class="w-5 h-5 neutral-grey hover:text-gray-600" fill="currentColor" viewBox="0 0 20 20">
                            <path d="M10 12a2 2 0 100-4 2 2 0 000 4z"></path>
                            <path fill-rule="evenodd" d="M.458 10C1.732 5.943 5.522 3 10 3s8.268 2.943 9.542 7c-1.274 4.057-5.064 7-9.542 7S1.732 14.057.458 10zM14 10a4 4 0 11-8 0 4 4 0 018 0z" clip-rule="evenodd"></path>
                        </svg>
                    </button>
                </div>
            </div>

            <!-- Confirm Password Field -->
            <div class="mb-12">
                <div class="relative">
                    <div class="absolute inset-y-0 left-0 pl-5 flex items-center pointer-events-none">
                        <svg class="w-5 h-5 neutral-grey" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z" clip-rule="evenodd"></path>
                        </svg>
                    </div>
                    <input 
                        type="password" 
                        id="confirmPassword"
                        class="w-full pl-12 pr-14 py-4 curved-input focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-base montserrat neutral-grey placeholder-gray-400"
                        placeholder="Confirm Password"
                    >
                    <button type="button" onclick="togglePassword('confirmPassword', 'eye-icon-2')" class="absolute inset-y-0 right-0 pr-5 flex items-center">
                        <svg id="eye-icon-2" class="w-5 h-5 text-gray-300 hover:text-gray-600" fill="currentColor" viewBox="0 0 20 20">
                            <path d="M10 12a2 2 0 100-4 2 2 0 000 4z"></path>
                            <path fill-rule="evenodd" d="M.458 10C1.732 5.943 5.522 3 10 3s8.268 2.943 9.542 7c-1.274 4.057-5.064 7-9.542 7S1.732 14.057.458 10zM14 10a4 4 0 11-8 0 4 4 0 018 0z" clip-rule="evenodd"></path>
                        </svg>
                    </button>
                </div>
            </div>

            <!-- Reset Password Button -->
            <button 
                onclick="handleResetPassword()"
                class="w-full bg-secondary text-white py-4 px-4 curved-button font-medium hover:bg-blue-600 transition duration-200 montserrat text-lg"
            >
                Reset password
            </button>
        </div>
    </div>

    <script>
        function showModal(message) {
            document.getElementById('modal-message').textContent = message;
            document.getElementById('modal').classList.remove('hidden');
        }

        document.getElementById('modal-close').addEventListener('click', function() {
            document.getElementById('modal').classList.add('hidden');
        });

        function goBack() {
            showModal('Going back to previous screen...');
        }

        function togglePassword(inputId, iconId) {
            const passwordInput = document.getElementById(inputId);
            const eyeIcon = document.getElementById(iconId);
            
            if (passwordInput.type === 'password') {
                passwordInput.type = 'text';
                eyeIcon.innerHTML = `
                    <path d="M3.707 2.293a1 1 0 00-1.414 1.414l14 14a1 1 0 001.414-1.414l-1.473-1.473A10.014 10.014 0 0019.542 10C18.268 5.943 14.478 3 10 3a9.958 9.958 0 00-4.512 1.074l-1.78-1.781zm4.261 4.26l1.514 1.515a2.003 2.003 0 012.45 2.45l1.514 1.514a4 4 0 00-5.478-5.478z"></path>
                    <path d="M12.454 16.697L9.75 13.992a4 4 0 01-3.742-3.741L2.335 6.578A9.98 9.98 0 00.458 10c1.274 4.057 5.065 7 9.542 7 .847 0 1.669-.105 2.454-.303z"></path>
                `;
            } else {
                passwordInput.type = 'password';
                eyeIcon.innerHTML = `
                    <path d="M10 12a2 2 0 100-4 2 2 0 000 4z"></path>
                    <path fill-rule="evenodd" d="M.458 10C1.732 5.943 5.522 3 10 3s8.268 2.943 9.542 7c-1.274 4.057-5.064 7-9.542 7S1.732 14.057.458 10zM14 10a4 4 0 11-8 0 4 4 0 018 0z" clip-rule="evenodd"></path>
                `;
            }
        }

        function isValidPassword(password) {
            // At least 8 characters, one uppercase, one lowercase, one numeric, one special character
            const regex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/;
            return regex.test(password);
        }

        function handleResetPassword() {
            const password = document.getElementById('password').value;
            const confirmPassword = document.getElementById('confirmPassword').value;
            
            if (password.trim().length < 8) {
                showModal('Password must be at least 8 characters long');
                return;
            }
            
            if (!isValidPassword(password)) {
                showModal('Password must contain at least one uppercase letter, one lowercase letter, one numeric digit, and one special character.');
                return;
            }
            
            if (password !== confirmPassword) {
                showModal('Passwords do not match. Please try again.');
                return;
            }
            
            // Simulate password reset success
            showModal('Password reset successfully! You can now log in with your new password.');
        }

        // Real-time password matching validation
        function validatePasswordMatch() {
            const password = document.getElementById('password').value;
            const confirmPassword = document.getElementById('confirmPassword').value;
            const confirmInput = document.getElementById('confirmPassword');
            
            if (confirmPassword && password !== confirmPassword) {
                confirmInput.style.borderColor = '#ff6b6b';
            } else {
                confirmInput.style.borderColor = 'rgb(70, 130, 180)';
            }
        }

        // Add real-time validation
        document.getElementById('password').addEventListener('input', validatePasswordMatch);
        document.getElementById('confirmPassword').addEventListener('input', validatePasswordMatch);

        // Password strength indicator
        document.getElementById('password').addEventListener('input', function() {
            const password = this.value;
            
            if (password.length > 0) {
                if (isValidPassword(password)) {
                    this.style.borderColor = '#10b981'; // Green for strong password
                } else if (password.length >= 8) {
                    this.style.borderColor = '#f59e0b'; // Yellow for medium password
                } else {
                    this.style.borderColor = '#ff6b6b'; // Red for weak password
                }
            } else {
                this.style.borderColor = 'rgb(70, 130, 180)'; // Default color
            }
        });
    </script>
</body>
</html>
