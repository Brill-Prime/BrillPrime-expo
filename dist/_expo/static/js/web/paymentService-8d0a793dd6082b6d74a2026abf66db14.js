__d(function(g,r,i,a,m,e,d){Object.defineProperty(e,"__esModule",{value:!0}),e.paymentService=void 0;var t=r(d[0]),n=r(d[1]);e.paymentService=new class{async createPaymentIntent(o,s="usd"){const c=await n.authService.getToken();return c?t.apiClient.post('/api/payments/create-intent',{amount:o,currency:s},{Authorization:`Bearer ${c}`}):{success:!1,error:'Authentication required'}}async processPayment(o){const s=await n.authService.getToken();return s?t.apiClient.post('/api/payments/process',o,{Authorization:`Bearer ${s}`}):{success:!1,error:'Authentication required'}}async getTransactions(o){const s=await n.authService.getToken();if(!s)return{success:!1,error:'Authentication required'};let c='/api/transactions';const u=new URLSearchParams;return o&&(o.type&&u.append('type',o.type),o.status&&u.append('status',o.status),o.dateFrom&&u.append('dateFrom',o.dateFrom),o.dateTo&&u.append('dateTo',o.dateTo),o.limit&&u.append('limit',o.limit.toString()),o.offset&&u.append('offset',o.offset.toString())),u.toString()&&(c+=`?${u.toString()}`),t.apiClient.get(c,{Authorization:`Bearer ${s}`})}async getTransaction(o){const s=await n.authService.getToken();return s?t.apiClient.get(`/api/transactions/${o}`,{Authorization:`Bearer ${s}`}):{success:!1,error:'Authentication required'}}async requestRefund(o,s){const c=await n.authService.getToken();return c?t.apiClient.post(`/api/transactions/${o}/refund`,{reason:s},{Authorization:`Bearer ${c}`}):{success:!1,error:'Authentication required'}}async getPaymentMethods(){const o=await n.authService.getToken();return o?t.apiClient.get('/api/payments/methods',{Authorization:`Bearer ${o}`}):{success:!1,error:'Authentication required'}}async addPaymentMethod(o){const s=await n.authService.getToken();return s?t.apiClient.post('/api/payments/methods',{paymentMethodId:o},{Authorization:`Bearer ${s}`}):{success:!1,error:'Authentication required'}}async removePaymentMethod(o){const s=await n.authService.getToken();return s?t.apiClient.delete(`/api/payments/methods/${o}`,{Authorization:`Bearer ${s}`}):{success:!1,error:'Authentication required'}}async setDefaultPaymentMethod(o){const s=await n.authService.getToken();return s?t.apiClient.put(`/api/payments/methods/${o}/default`,{},{Authorization:`Bearer ${s}`}):{success:!1,error:'Authentication required'}}async processTollPayment(o){const s=await n.authService.getToken();return s?t.apiClient.post('/api/payments/toll',o,{Authorization:`Bearer ${s}`}):{success:!1,error:'Authentication required'}}async getTollPayments(o){const s=await n.authService.getToken();if(!s)return{success:!1,error:'Authentication required'};let c='/api/payments/toll/history';const u=new URLSearchParams;return o&&(o.fromDate&&u.append('fromDate',o.fromDate),o.toDate&&u.append('toDate',o.toDate),o.limit&&u.append('limit',o.limit.toString()),o.offset&&u.append('offset',o.offset.toString())),u.toString()&&(c+=`?${u.toString()}`),t.apiClient.get(c,{Authorization:`Bearer ${s}`})}}},859,[745,747]);